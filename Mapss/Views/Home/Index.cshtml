@model Mapss.Models.PaginaMapa

@{
    ViewBag.Title = "Index";
    Estado e1 = new Estado(1,"estado1");
    Estado e2 = new Estado(2,"estado2");
    Estado e3 = new Estado(3,"estado3");
    List<Estado> estados = new List<Estado>();
    estados.Add(e1);
    estados.Add(e2);
    estados.Add(e3);

}

@using Mapss.Models;

<h2>Mapa</h2>
<div class="row">
    <!-- left column -->
    <div class="col-md-12">
        <!-- general form elements -->
        <div class="box box-info">
            <!-- form start -->
            <form id="frmBusquedaPuntos" method="post" class="form-horizontal" role="form">
                <div class="box-body">
                    @*input type="hidden" id="hdnPerfil" class="form-control" name="idperfil" value="@item.profileId" />*@
                    <div class="form-group">
                        <label for="ddlEstados" class="col-sm-1 control-label">Estado</label>
                        <div class="col-sm-3">
                            @Html.DropDownListFor(model => model.estadoId, new System.Web.Mvc.SelectList(estados, "estadoId", "estadoDesc"), "Seleccione", new { @class = "form-control", @id = "ddlEstados" })
                        </div>
                        <div class="col-sm-2">
                            <button id="btnBuscar" type="submit" class="btn btn-primary">Buscar</button>
                        </div>
                    </div>
                </div>
            </form>

            <div class="box-body">
                <!-- Here goes the map -->
                <div id="map"></div>
                <div class="btnsMap">
                    <button onclick="toggleHeatmap()">Toggle Heatmap</button>
                    <button onclick="changeGradient()">Change gradient</button>
                    <button onclick="changeRadius()">Change radius</button>
                    <button onclick="changeOpacity()">Change opacity</button>
                </div>
            </div>
        </div>
        <!-- /.box -->
    </div>
</div>

@section styles{
    <link rel="stylesheet" href="@Url.Content("~/Content/index.css")" />    

    
}

@section scripts{
    
    <script src="@Url.Content("~/Scripts/app/index.js")"></script>
    <script>
        var map;
        var initialCenter = { lat: -12.039, lng: -77.014 };
        var heatmap;
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: initialCenter,
                zoom: 12,
                mapTypeId: 'satellite'
            });

            var marker;
            var markerPosition;
            var markerImage;
            var contentString;
            var contentStringList = [];
            var infowindow = new google.maps.InfoWindow();
            //fill the markers that comes from the model
            var points = @Html.Raw(Json.Encode(Model.puntos));
            var pointsArray = [];
            debugger;
            for (var i = 0; i < points.length; i++) {
                debugger;
                markerPosition = { lat: points[i].puntoY, lng: points[i].puntoX };
                if(points[i].estadoId === 1){
                    markerImage = '@Url.Content("~/Content/images/azul.png")';
                } else {
                    markerImage = '@Url.Content("~/Content/images/amarillo.png")';
                }
                marker = new google.maps.Marker({
                            map: map,
                            draggable: true,
                            animation: google.maps.Animation.DROP,
                            title: points[i].information,
                            position: markerPosition,
                            icon: markerImage
                });
                
                contentString = '<div id="content">'+
                                '<div id="siteNotice">'+
                                '</div>'+
                                '<h1 id="firstHeading" class="firstHeading">Information</h1>'+
                                '<div id="bodyContent">'+
                                '<p> Coordenada x: ' + points[i].puntoX + '</p>' +
                                '<p> Coordenada y: ' + points[i].puntoY + '</p>' +
                                '<p> Sede: ' + points[i].information + '</p>' +
                                '(last visited June 22, 2009).</p>'+
                                '</div>'+
                                '</div>';

                contentStringList.push(contentString);

                //marker.addListener('click', function() {
                //    debugger;
                //    infowindow.setContent(contentString);
                //    infowindow.open(map, marker);
                //});                

                google.maps.event.addListener(marker,'click', (function(marker,i)
                {
                    return function()
                    {
                        infowindow.setContent(contentStringList[i]);
                        infowindow.open(map, marker);
                    }
                })(marker,i));

                pointsArray.push(new google.maps.LatLng(points[i].puntoY, points[i].puntoX));

                //contentString = null;
                //infowindow = null;
            }

            heatmap = new google.maps.visualization.HeatmapLayer({
                data: pointsArray,
                map: map
            });
        }

        function toggleHeatmap() {
            heatmap.setMap(heatmap.getMap() ? null : map);
        }

        function changeGradient() {
            var gradient = [
              'rgba(0, 255, 255, 0)',
              'rgba(0, 255, 255, 1)',
              'rgba(0, 191, 255, 1)',
              'rgba(0, 127, 255, 1)',
              'rgba(0, 63, 255, 1)',
              'rgba(0, 0, 255, 1)',
              'rgba(0, 0, 223, 1)',
              'rgba(0, 0, 191, 1)',
              'rgba(0, 0, 159, 1)',
              'rgba(0, 0, 127, 1)',
              'rgba(63, 0, 91, 1)',
              'rgba(127, 0, 63, 1)',
              'rgba(191, 0, 31, 1)',
              'rgba(255, 0, 0, 1)'
            ]
            heatmap.set('gradient', heatmap.get('gradient') ? null : gradient);
        }

        function changeRadius() {
            heatmap.set('radius', heatmap.get('radius') ? null : 20);
        }

        function changeOpacity() {
            heatmap.set('opacity', heatmap.get('opacity') ? null : 0.2);
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD7t38kS-Gkr1auv9mjnqDudcs-KWH6Kf0&libraries=visualization&callback=initMap" async defer></script>
    


}
























